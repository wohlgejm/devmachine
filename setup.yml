---
- hosts: 127.0.0.1
  connection: local
  tasks:

  - name: ubuntu reqs
    become: true
    apt:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - software-properties-common
        - build-essential
        - cmake
        - python3-pip
        - python3-pip
        - python3-virtualenv
        - libxss1
        - libappindicator1
        - libindicator7
        - git-core
        - curl
        - byobu
        - dconf-cli
        - xclip
        - libreadline-dev
        - zlib1g-dev
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - patch
        - liblzma-dev
        - qt5-default
        - libqt5webkit5-dev
        - awscli
        - libncurses5-dev
        - libffi-dev
        - libgdbm-dev
        - autoconf
        - libyaml-dev
        - imagemagick
        - libmagickwand-dev
        - redis-server
        - mmv
        - rename

  # libssl 1.0 is needed for ruby 2.3 and older
  - name: libssl1.0 repo
    become: true
    apt_repository:
      repo: deb http://security.ubuntu.com/ubuntu bionic-security main
      state: present
    tags: libssl1.0

  - name: libssl1.0
    become: true
    apt:
      name: libssl1.0-dev
      update_cache: yes
    tags: libssl1.0

  - name: neovim install
    become: true
    apt:
      name: neovim
      update_cache: yes
    tags: neovim

  - name: neovim alternatives
    become: true
    shell: >
      update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60;
      update-alternatives --config vi;
      update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60;
      update-alternatives --config vim;
      update-alternatives --install /usr/bin/editor editor /usr/bin/nvim 60;
      update-alternatives --config editor

  - name: symlink .vimrc
    command: ln -s ~/devmachine/dotfiles/.vimrc ~/.vimrc
    args:
      creates: ~/.vimrc
    tags: vim

  - name: symlink .vimrc with neovim init
    shell: |
      mkdir -p ~/.config/nvim
      ln -s ~/.vimrc ~/.config/nvim/init.vim
    args:
      creates: ~/.config/nvim/init.vim
    tags: vim

  - name: vim-plug
    command: curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    args:
      creates: ~/.vim/autoload/plug.vim
    tags: vim

  - name: symlink coc-settings
    shell: ln -s ~/devmachine/dotfiles/coc-settings.json ~/.config/nvim/coc-settings.json
    args:
      creates: ~/.config/nvim/coc-settings.json
    tags: vim

  - name: coc install
    command: vim +CocInstall +qall

  - name: clone rbenv
    git: >
      repo=git://github.com/sstephenson/rbenv.git
      dest=~/.rbenv
    tags: rbenv

  - name: rbenv plugins
    git: >
      repo=git://github.com/sstephenson/ruby-build.git
      dest=~/.rbenv/plugins/ruby-build
    tags: rbenv

  - name: install ruby 2.3.1
    shell: ~/.rbenv/bin/rbenv install -v 2.3.1
    args:
      creates: ~/.rbenv/versions/2.3.1
    tags: rbenv

  - name: set global version of ruby to 2.3.1
    shell: ~/.rbenv/bin/rbenv global 2.3.1
    tags: rbenv

  - name: bashrc
    shell: grep -qxF 'source ~/devmachine/dotfiles/.bashrc' ~/.bashrc || echo 'source ~/devmachine/dotfiles/.bashrc' >> ~/.bashrc
    tags: bashrc

  - name: create .gitconfig if doesn't exist
    file:
      name: /home/jerry/.gitconfig
      state: touch

  - name: git aliases
    command: git config --global alias.{{ item.abbr }} {{ item.command }}
    with_items:
      - { abbr: 'co',  command: 'checkout' }
      - { abbr: 'dc', command: 'diff --cached' }
      - { abbr: 'pop', command: "'reset --soft head~1'" }
      - { abbr: 'reword', command: "'commit --only --amend'" }
      - { abbr: 'st', command: 'status' }
      - { abbr: 'pushf', command: 'push --force-with-lease' }
      - { abbr: 'unpulled', command: "'!\"git fetch && git log HEAD..@{u}\"'" }
      - { abbr: 'unpushed', command: "'log @{u}..HEAD'" }

  # Run base16_${theme-name} after to install
  - name: gnome shell base 16
    git:
      repo: https://github.com/chriskempson/base16-shell.git
      dest: ~/.config/base16-shell

  - name: docker key
    become: true
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    tags: docker

  - name: docker repo
    become: true
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    tags: docker

  - name: docker install
    become: true
    apt:
      name: docker-ce
      update_cache: yes
    tags: docker

  - name: adding {{ansible_user_id}} to docker group
    become: true
    command: usermod -aG docker {{ansible_user_id}}
    tags: docker

  - name: docker compose
    become: true
    shell: >
      curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose;
      chmod +x /usr/local/bin/docker-compose
    args:
      creates: /usr/local/bin/docker-compose

  - name: erlang repo
    become: true
    apt:
      deb: https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb
    tags: elixir

  - name: erlang
    become: true
    apt:
      name: esl-erlang
      update_cache: yes
    tags: elixir

  - name: kiex download
    get_url:
      url: https://raw.githubusercontent.com/taylor/kiex/master/kiex
      dest: /tmp/kiex
    tags: elixir

  - name: install kiex
    command: bash kiex install_kiex
    args:
      chdir: /tmp
      creates: ~/.kiex
    tags: elixir

  - name: install n node version manager
    shell: curl -L https://git.io/n-install | bash -s -- -y
    args:
      creates: ~/n
      chdir: ~/
    tags: n

  - name: symlink n
    become: true
    command: ln -s ~/n/bin/n /usr/local/bin/n
    args:
      creates: /usr/local/bin/n
    tags: n

  - name: g go version mananger
    shell: curl -sSL https://git.io/g-install | bash -s -- -y
    args:
      creates: ~/go
    tags: go

  - name: symlink g
    become: true
    command: ln -s ~/go/bin/g /usr/local/bin/g
    args:
      creates: /usr/local/bin/g
    tags: go

  - name: download rust installer
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/rust.sh
    tags: rust

  - name: install rust
    command: bash /tmp/rust.sh -y
    tags: rust
    args:
      creates: ~/.cargo/bin/rustup

  - name: update rust
    shell: ~/.cargo/bin/rustup update
    tags: rust

  - name: ripgrep
    command: ~/.cargo/bin/cargo install ripgrep --force
    args:
      creates: ~/.cargo/bin/rg

  - name: heroku install
    command: snap install --classic heroku
    become: true
    tags: heroku

  - name: slack
    become: true
    snap:
      name: slack
      classic: yes

  - name: kubectl
    become: true
    snap:
      name: kubectl
      classic: yes
    tags: k8s

  - name: helm
    become: true
    snap:
      name: helm
      classic: yes
    tags: k8s
